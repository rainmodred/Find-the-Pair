{"version":3,"sources":["src/js/Cards.js","src/js/Game.js","index.js"],"names":["Cards","cardsArray","sort","a","b","Math","random","index","Game","lives","newGame","cardsClicked","opened","moves","openToWin","cardName","clickedCardsArray","push","card1","card2","dataset","name","createCards","cards","forEach","card","document","createElement","classList","add","front","back","handleCardClick","gameDom","appendChild","closeCards","ms","setTimeout","remove","showGameOver","status","domSt","querySelector","span","innerHTML","gameOverDom","style","display","addEventListener","startNewGame","LIVES","updateStats","movesDom","textContent","game","livesDom","indexOf","clickedCards","length","compareCards","updateMoves","compare","updateOpened","updateLives","removeCards","hasChildNodes","removeChild","lastChild","randomCards","window","onload"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["export default class Cards {\r\n  constructor() {\r\n    this.cardsArray = [\r\n      'moon',\r\n      'moon',\r\n      'goat',\r\n      'rat',\r\n      'summer',\r\n      'winter',\r\n      'rabbit',\r\n      'sigma',\r\n      'new-moon',\r\n      'new-moon',\r\n      'goat',\r\n      'rat',\r\n      'summer',\r\n      'winter',\r\n      'rabbit',\r\n      'sigma',\r\n    ];\r\n  }\r\n\r\n  randomCards() {\r\n    this.cardsArray.sort((a, b) => {\r\n      return 0.5 - Math.random();\r\n    });\r\n  }\r\n\r\n  getName(index) {\r\n    return this.cardsArray[index];\r\n  }\r\n}\r\n","class Game {\r\n  constructor(lives) {\r\n    this.newGame(lives);\r\n    this.cardsClicked = 0;\r\n    this.opened = 0;\r\n    this.moves = 0;\r\n    this.lives = lives;\r\n    this.openToWin = 8;\r\n\r\n  }\r\n  newGame(lives) {\r\n    this.opened = 0;\r\n    this.moves = 0;\r\n    this.lives = lives;\r\n    this.openToWin = 8;\r\n  }\r\n\r\n  addClickedCardName(cardName) {\r\n    this.clickedCardsArray.push(cardName);\r\n  }\r\n\r\n  compareCards(card1, card2) {\r\n    return card1.dataset.name === card2.dataset.name;\r\n  }\r\n\r\n  updateLives() {\r\n    this.lives--;\r\n  }\r\n  \r\n  updateMoves() {\r\n    this.moves++;\r\n  }\r\n\r\n  updateOpened() {\r\n    this.opened++;\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import Cards from './src/js/Cards'\r\nimport Game from './src/js/Game'\r\n\r\nfunction createCards() {\r\n  cards.cardsArray.forEach(cardName => {\r\n    const card = document.createElement('div');\r\n\r\n    card.classList.add('card');\r\n    card.classList.add('flipped');\r\n    card.dataset.name = cardName;\r\n\r\n    const front = document.createElement('div');\r\n    front.classList.add('front');\r\n\r\n    const back = document.createElement('div');\r\n    back.classList.add('back');\r\n\r\n    handleCardClick(card);\r\n    gameDom.appendChild(card);\r\n    card.appendChild(front);\r\n    card.appendChild(back);\r\n  });\r\n}\r\n\r\nfunction closeCards(cards, ms) {\r\n  setTimeout(() => {\r\n    cards.forEach(card => {\r\n      card.classList.remove(card.dataset.name);\r\n      card.classList.add('flipped');\r\n    });\r\n  }, ms);\r\n}\r\n\r\nfunction showGameOver(status) {\r\n  const domSt = document.querySelector(`.${status}`)\r\n  const span = document.createElement('span');\r\n\r\n  span.classList.add('play-again');\r\n  span.innerHTML = 'Play again';\r\n  gameOverDom.style.display = 'block';\r\n  domSt.classList.add('status');\r\n  domSt.appendChild(span);\r\n  span.addEventListener('click', () => {\r\n    gameOverDom.style.display = 'none';\r\n    domSt.classList.remove('status');\r\n    startNewGame(LIVES);\r\n    span.remove();\r\n  });\r\n}\r\n\r\nfunction updateStats() {\r\n  movesDom.textContent = game.moves;\r\n  livesDom.textContent = game.lives;\r\n}\r\n\r\nfunction handleCardClick(card) {\r\n  card.addEventListener('click', () => {\r\n    if ([...card.classList].indexOf('flipped') === -1 || clickedCards.length > 1) {\r\n      return;\r\n    }\r\n    let cardName = card.dataset.name;\r\n    card.classList.remove('flipped');\r\n    card.classList.add(cardName);\r\n\r\n    clickedCards.push(card);\r\n\r\n    if (clickedCards.length === 2) {\r\n      compareCards();\r\n    }\r\n  });\r\n}\r\n\r\nfunction compareCards() {\r\n  game.updateMoves();\r\n  let compare = game.compareCards(...clickedCards);\r\n  if (compare) {\r\n    game.updateOpened();\r\n    clickedCards = [];\r\n    if (game.opened === game.openToWin) {\r\n      showGameOver('won');\r\n    }\r\n  } else {\r\n    game.updateLives();\r\n\r\n    if (game.lives === 0) {\r\n      showGameOver('lost');\r\n    }\r\n    closeCards(clickedCards, 1000);\r\n    clickedCards = [];\r\n    updateStats();\r\n  }\r\n}\r\n\r\nfunction removeCards() {\r\n  while (gameDom.hasChildNodes()) {\r\n    gameDom.removeChild(gameDom.lastChild);\r\n  }\r\n}\r\n\r\nfunction startNewGame(lives) {\r\n  removeCards();\r\n  game.newGame(lives);\r\n  cards.randomCards();\r\n  createCards();\r\n  movesDom.textContent = 0;\r\n  livesDom.textContent = 0;\r\n}\r\n\r\n\r\nconst LIVES = 20;\r\n\r\nconst gameDom = document.querySelector('.game');\r\nconst gameOverDom = document.querySelector('.game-over');\r\nconst movesDom = document.querySelector('.moves');\r\nconst livesDom = document.querySelector('.lives');\r\n\r\nconst game = new Game(LIVES);\r\nconst cards = new Cards();\r\n\r\nwindow.onload = () => updateStats()\r\n\r\nlet clickedCards = [];\r\nstartNewGame(LIVES);\r\n"]}